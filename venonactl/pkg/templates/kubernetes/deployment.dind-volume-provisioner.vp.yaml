apiVersion: apps/v1
kind: Deployment
metadata:
  name: dind-volume-provisioner-{{ .AppName }}
  namespace: {{ .Namespace }}
  labels:
    app: dind-volume-provisioner
spec:
  selector:
    matchLabels:
      app: dind-volume-provisioner
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: dind-volume-provisioner
    spec:
      {{ if .Storage.VolumeProvisioner.NodeSelector }}
      nodeSelector: 
{{ .Storage.VolumeProvisioner.NodeSelector | nodeSelectorParamToYaml | indent 8 | unescape}}
      {{ end }}
      serviceAccount: volume-provisioner-{{ .AppName }}
      securityContext:
        runAsUser: 3000
        runAsGroup: 3000
        fsGroup: 3000
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: "Exists"

{{ toYaml .Tolerations | indent 8 | unescape}}

      containers:
      - name: dind-volume-provisioner
        resources:
{{ toYaml .Storage.VolumeProvisioner.Resources | indent 10 }}
        image: {{ if ne .DockerRegistry ""}} {{- .DockerRegistry }}/{{ .Storage.VolumeProvisioner.Image }} {{- else }} {{- .Storage.VolumeProvisioner.Image }} {{- end}}
        imagePullPolicy: Always
        command:
          - /usr/local/bin/dind-volume-provisioner
          - -v=4
          - --resync-period=50s
        env:
        {{- if $.EnvVars }}
        {{- range $key, $value := $.EnvVars }}
        - name: {{ $key }}
          value: "{{ $value}}"
        {{- end}}
        {{- end}}
        - name: PROVISIONER_NAME
          value: codefresh.io/dind-volume-provisioner-{{ .AppName }}-{{ .Namespace }}
        {{- if ne .DockerRegistry "" }}
        - name: DOCKER_REGISTRY
          value: {{ .DockerRegistry }}
        {{- end }}
        {{- if .Storage.VolumeProvisioner.CreateDindVolDirResouces.Limits }}
          {{- if .Storage.VolumeProvisioner.CreateDindVolDirResouces.Limits.CPU }}
        - name: CREATE_DIND_LIMIT_CPU
          value: {{ .Storage.VolumeProvisioner.CreateDindVolDirResouces.Limits.CPU  }}
          {{- end }}
          {{- if .Storage.VolumeProvisioner.CreateDindVolDirResouces.Limits.Memory }}
        - name: CREATE_DIND_LIMIT_MEMORY
          value: {{ .Storage.VolumeProvisioner.CreateDindVolDirResouces.Limits.Memory  }}
          {{- end }}
        {{- end }}
        {{- if .Storage.VolumeProvisioner.CreateDindVolDirResouces.Requests }}
          {{- if .Storage.VolumeProvisioner.CreateDindVolDirResouces.Requests.CPU }}
        - name: CREATE_DIND_REQUESTS_CPU
          value: {{ .Storage.VolumeProvisioner.CreateDindVolDirResouces.Requests.CPU  }}
          {{- end }}
          {{- if .Storage.VolumeProvisioner.CreateDindVolDirResouces.Requests.Memory }}
        - name: CREATE_DIND_REQUESTS_MEMORY
          value: {{ .Storage.VolumeProvisioner.CreateDindVolDirResouces.Requests.Memory  }}
          {{- end }}
        {{- end }}
        {{- if .Storage.AwsAccessKeyId }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: dind-volume-provisioner-{{ .AppName }}
              key: aws_access_key_id
        {{- end }}
        {{- if .Storage.AwsSecretAccessKey }}
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: dind-volume-provisioner-{{ .AppName }}
              key: aws_secret_access_key
        {{- end }}
      {{- if .Storage.GoogleServiceAccount }}
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/dind-volume-provisioner/credentials/google-service-account.json
      {{- end }}
      {{- if .Storage.VolumeProvisioner.MountAzureJson }}
        - name: AZURE_CREDENTIAL_FILE
          value: "/etc/kubernetes/azure.json"
      {{- end }}
        volumeMounts:
      {{- if .Storage.VolumeProvisioner.MountAzureJson }}
        - name: azure-json
          readOnly: true
          mountPath: "/etc/kubernetes/azure.json"
      {{- end }}        
      {{- if .Storage.GoogleServiceAccount }}
        - name: credentials
          readOnly: true
          mountPath: "/etc/dind-volume-provisioner/credentials"
      {{- end }}
      volumes:
      {{- if .Storage.VolumeProvisioner.MountAzureJson }}
        - name: azure-json
          hostPath:
            path: /etc/kubernetes/azure.json
            type: File          
      {{- end }}
      {{- if .Storage.GoogleServiceAccount }}
      - name: credentials
        secret:
          secretName: dind-volume-provisioner-{{ .AppName }}
      {{- end }}
