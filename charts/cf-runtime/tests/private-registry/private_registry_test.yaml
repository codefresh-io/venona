# yaml-language-server: $schema=https://raw.githubusercontent.com/quintush/helm-unittest/master/schema/helm-testsuite.json
suite: private_registry test
values:
  - ../values.yaml
  - ../values-private-registry.yaml
templates:
  - templates/**.yaml
release:
  name: cf-runtime
  namespace: codefresh
  revision: 1
  upgrade: true
# chart:
#   version: 1.0.0
#   appVersion: 1.0.0
tests:
  - it: Test private registry in runtime spec
    template: templates/hooks/post-install/cm-update-runtime.yaml
    asserts:
      - matchRegex:
          path: data["runtime.yaml"]
          pattern: |
            metadata:
              name: my-context/codefresh
              agent: true
            runtimeScheduler:
              type: KubernetesPod
              image: 'somedomain.io/codefresh/engine:tagoverride'
              imagePullPolicy: IfNotPresent
              command:
                - npm
                - run
                - start
              envVars:
                CONTAINER_LOGGER_EXEC_CHECK_INTERVAL_MS: '1000'
                DOCKER_REQUEST_TIMEOUT_MS: '30000'
                FORCE_COMPOSE_SERIAL_PULL: 'false'
                LOGGER_LEVEL: 'debug'
                LOG_OUTGOING_HTTP_REQUESTS: 'false'
                METRICS_PROMETHEUS_COLLECT_PROCESS_METRICS: 'false'
                METRICS_PROMETHEUS_ENABLED: 'true'
                METRICS_PROMETHEUS_ENABLE_LEGACY_METRICS: 'false'
                METRICS_PROMETHEUS_HOST: '0.0.0.0'
                METRICS_PROMETHEUS_PORT: '9100'
                METRICS_PROMETHEUS_SCRAPE_TIMEOUT: '90000'
                TRUSTED_QEMU_IMAGES: ''
                COMPOSE_IMAGE: 'somedomain.io/codefresh/compose:tagoverride'
                CONTAINER_LOGGER_IMAGE: 'somedomain.io/codefresh/cf-container-logger:tagoverride'
                DOCKER_BUILDER_IMAGE: 'somedomain.io/codefresh/cf-docker-builder:tagoverride'
                DOCKER_PULLER_IMAGE: 'somedomain.io/codefresh/cf-docker-puller:tagoverride'
                DOCKER_PUSHER_IMAGE: 'somedomain.io/codefresh/cf-docker-pusher:tagoverride'
                DOCKER_TAG_PUSHER_IMAGE: 'somedomain.io/codefresh/cf-docker-tag-pusher:tagoverride'
                FS_OPS_IMAGE: 'somedomain.io/codefresh/fs-ops:tagoverride'
                GIT_CLONE_IMAGE: 'somedomain.io/codefresh/cf-git-cloner:tagoverride'
                KUBE_DEPLOY: 'somedomain.io/codefresh/cf-deploy-kubernetes:tagoverride'
                PIPELINE_DEBUGGER_IMAGE: 'somedomain.io/codefresh/cf-debugger:tagoverride'
                TEMPLATE_ENGINE: 'somedomain.io/codefresh/pikolo:tagoverride'
                CR_6177_FIXER: 'somedomain.io/alpine:tagoverride'
                GC_BUILDER_IMAGE: 'somedomain.io/codefresh/cf-gc-builder:tagoverride'
                COSIGN_IMAGE_SIGNER_IMAGE: 'somedomain.io/codefresh/cf-cosign-image-signer:tagoverride'
                RUNTIME_CHART_VERSION: [\w.-]+
              workflowLimits:
                MAXIMUM_ALLOWED_TIME_BEFORE_PRE_STEPS_SUCCESS: 600
                MAXIMUM_ALLOWED_WORKFLOW_AGE_BEFORE_TERMINATION: 86400
                MAXIMUM_ELECTED_STATE_AGE_ALLOWED: 900
                MAXIMUM_RETRY_ATTEMPTS_ALLOWED: 20
                MAXIMUM_TERMINATING_STATE_AGE_ALLOWED: 900
                MAXIMUM_TERMINATING_STATE_AGE_ALLOWED_WITHOUT_UPDATE: 300
                TIME_ENGINE_INACTIVE_UNTIL_TERMINATION: 300
                TIME_ENGINE_INACTIVE_UNTIL_UNHEALTHY: 60
                TIME_INACTIVE_UNTIL_TERMINATION: 2700
              cluster:
                namespace: codefresh
                serviceAccount: codefresh-engine
                clusterProvider:
                  accountId: 7890
                  selector: my-context
              resources:
                limits:
                  cpu: 1000m
                  memory: 2048Mi
                requests:
                  cpu: 100m
                  memory: 128Mi
              terminationGracePeriodSeconds: 180
            dockerDaemonScheduler:
              type: DindKubernetesPod
              dindImage: 'somedomain.io/codefresh/dind:tagoverride'
              imagePullPolicy: IfNotPresent
              userAccess: true
              envVars:
                DOCKER_ENABLE_DEPRECATED_PULL_SCHEMA_1_IMAGE: 'true'
              cluster:
                namespace: codefresh
                serviceAccount: codefresh-engine
                clusterProvider:
                  accountId: 7890
                  selector: my-context
              pvcs:
                - name: dind
                  reuseVolumeSelector: 'codefresh-app,io.codefresh.accountName'
                  reuseVolumeSortOrder: pipeline_id
                  storageClassName: dind-local-volumes-runner-codefresh
                  volumeSize: 16Gi
              defaultDindResources:
                limits:
                  cpu: 400m
                  memory: 800Mi
                requests: null
              terminationGracePeriodSeconds: 30
            extends:
              - system/default/hybrid/k8s_low_limits
            description: null
            accountId: 7890

  - it: Test private registy in runner
    template: templates/runner/deployment.yaml
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: ^somedomain.io/codefresh/.*$

  - it: Test private registy in runner init container
    template: templates/runner/deployment.yaml
    asserts:
      - matchRegex:
          path: spec.template.spec.initContainers[0].image
          pattern: ^somedomain.io/codefresh/.*$

  - it: Test private registy in volume-provisioner
    template: templates/runner/deployment.yaml
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: ^somedomain.io/codefresh/.*$

  - it: Test private registy in dind-lv-monitor
    template: templates/volume-provisioner/daemonset.yaml
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: ^somedomain.io/codefresh/.*$

  - it: Test private registy in cronjob
    template: templates/volume-provisioner/cronjob.yaml
    set:
      storage.backend: ebs-csi
    asserts:
      - matchRegex:
          path: spec.jobTemplate.spec.template.spec.containers[0].image
          pattern: ^somedomain.io/codefresh/.*$

  - it: Test private registy in monitor
    template: templates/monitor/deployment.yaml
    set:
      monitor.enabled: true
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: ^somedomain.io/codefresh/.*$

  - it: Test private registy in app-proxy
    template: templates/app-proxy/deployment.yaml
    set:
      appProxy.enabled: true
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: ^somedomain.io/codefresh/.*$

  - it: Test private registy in hooks
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: ^somedomain.io/codefresh/.*$
        template: templates/hooks/post-install/job-update-runtime.yaml
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: ^somedomain.io/codefresh/.*$
        template: templates/hooks/post-install/job-gencerts-dind.yaml
